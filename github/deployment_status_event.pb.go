// Code generated by protoc-gen-gogo.
// source: deployment_status_event.proto
// DO NOT EDIT!

package github

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeploymentStatus struct {
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Id            int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	State         string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Creator       *User  `protobuf:"bytes,4,opt,name=creator" json:"creator,omitempty"`
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	TargetUrl     string `protobuf:"bytes,6,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
	CreatedAt     string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeploymentUrl string `protobuf:"bytes,9,opt,name=deployment_url,json=deploymentUrl,proto3" json:"deployment_url,omitempty"`
	RepositoryUrl string `protobuf:"bytes,10,opt,name=repository_url,json=repositoryUrl,proto3" json:"repository_url,omitempty"`
}

func (m *DeploymentStatus) Reset()         { *m = DeploymentStatus{} }
func (m *DeploymentStatus) String() string { return proto.CompactTextString(m) }
func (*DeploymentStatus) ProtoMessage()    {}
func (*DeploymentStatus) Descriptor() ([]byte, []int) {
	return fileDescriptorDeploymentStatusEvent, []int{0}
}

type DeploymentStatusEvent struct {
	DeploymentStatus *DeploymentStatus `protobuf:"bytes,1,opt,name=deployment_status,json=deploymentStatus" json:"deployment_status,omitempty"`
	Deployment       *Deployment       `protobuf:"bytes,2,opt,name=deployment" json:"deployment,omitempty"`
	Repository       *Repository       `protobuf:"bytes,3,opt,name=repository" json:"repository,omitempty"`
	Sender           *User             `protobuf:"bytes,4,opt,name=sender" json:"sender,omitempty"`
}

func (m *DeploymentStatusEvent) Reset()         { *m = DeploymentStatusEvent{} }
func (m *DeploymentStatusEvent) String() string { return proto.CompactTextString(m) }
func (*DeploymentStatusEvent) ProtoMessage()    {}
func (*DeploymentStatusEvent) Descriptor() ([]byte, []int) {
	return fileDescriptorDeploymentStatusEvent, []int{1}
}

func init() {
	proto.RegisterType((*DeploymentStatus)(nil), "github.DeploymentStatus")
	proto.RegisterType((*DeploymentStatusEvent)(nil), "github.DeploymentStatusEvent")
}
func (m *DeploymentStatus) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *DeploymentStatus) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.Url)))
		i += copy(data[i:], m.Url)
	}
	if m.Id != 0 {
		data[i] = 0x10
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(m.Id))
	}
	if len(m.State) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.State)))
		i += copy(data[i:], m.State)
	}
	if m.Creator != nil {
		data[i] = 0x22
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(m.Creator.Size()))
		n1, err := m.Creator.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Description) > 0 {
		data[i] = 0x2a
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.Description)))
		i += copy(data[i:], m.Description)
	}
	if len(m.TargetUrl) > 0 {
		data[i] = 0x32
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.TargetUrl)))
		i += copy(data[i:], m.TargetUrl)
	}
	if len(m.CreatedAt) > 0 {
		data[i] = 0x3a
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.CreatedAt)))
		i += copy(data[i:], m.CreatedAt)
	}
	if len(m.UpdatedAt) > 0 {
		data[i] = 0x42
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.UpdatedAt)))
		i += copy(data[i:], m.UpdatedAt)
	}
	if len(m.DeploymentUrl) > 0 {
		data[i] = 0x4a
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.DeploymentUrl)))
		i += copy(data[i:], m.DeploymentUrl)
	}
	if len(m.RepositoryUrl) > 0 {
		data[i] = 0x52
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(len(m.RepositoryUrl)))
		i += copy(data[i:], m.RepositoryUrl)
	}
	return i, nil
}

func (m *DeploymentStatusEvent) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *DeploymentStatusEvent) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DeploymentStatus != nil {
		data[i] = 0xa
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(m.DeploymentStatus.Size()))
		n2, err := m.DeploymentStatus.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Deployment != nil {
		data[i] = 0x12
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(m.Deployment.Size()))
		n3, err := m.Deployment.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Repository != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(m.Repository.Size()))
		n4, err := m.Repository.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.Sender != nil {
		data[i] = 0x22
		i++
		i = encodeVarintDeploymentStatusEvent(data, i, uint64(m.Sender.Size()))
		n5, err := m.Sender.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func encodeFixed64DeploymentStatusEvent(data []byte, offset int, v uint64) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	data[offset+4] = uint8(v >> 32)
	data[offset+5] = uint8(v >> 40)
	data[offset+6] = uint8(v >> 48)
	data[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32DeploymentStatusEvent(data []byte, offset int, v uint32) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintDeploymentStatusEvent(data []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		data[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	data[offset] = uint8(v)
	return offset + 1
}
func (m *DeploymentStatus) Size() (n int) {
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovDeploymentStatusEvent(uint64(m.Id))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	if m.Creator != nil {
		l = m.Creator.Size()
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	l = len(m.TargetUrl)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	l = len(m.DeploymentUrl)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	l = len(m.RepositoryUrl)
	if l > 0 {
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	return n
}

func (m *DeploymentStatusEvent) Size() (n int) {
	var l int
	_ = l
	if m.DeploymentStatus != nil {
		l = m.DeploymentStatus.Size()
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	if m.Repository != nil {
		l = m.Repository.Size()
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	if m.Sender != nil {
		l = m.Sender.Size()
		n += 1 + l + sovDeploymentStatusEvent(uint64(l))
	}
	return n
}

func sovDeploymentStatusEvent(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozDeploymentStatusEvent(x uint64) (n int) {
	return sovDeploymentStatusEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DeploymentStatus) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentStatusEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Creator == nil {
				m.Creator = &User{}
			}
			if err := m.Creator.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetUrl = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeploymentUrl = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RepositoryUrl = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentStatusEvent(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeploymentStatusEvent) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentStatusEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentStatusEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentStatusEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeploymentStatus == nil {
				m.DeploymentStatus = &DeploymentStatus{}
			}
			if err := m.DeploymentStatus.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &Deployment{}
			}
			if err := m.Deployment.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Repository", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Repository == nil {
				m.Repository = &Repository{}
			}
			if err := m.Repository.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sender == nil {
				m.Sender = &User{}
			}
			if err := m.Sender.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentStatusEvent(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDeploymentStatusEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeploymentStatusEvent(data []byte) (n int, err error) {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeploymentStatusEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if data[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeploymentStatusEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthDeploymentStatusEvent
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowDeploymentStatusEvent
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := data[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipDeploymentStatusEvent(data[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthDeploymentStatusEvent = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeploymentStatusEvent   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("deployment_status_event.proto", fileDescriptorDeploymentStatusEvent) }

var fileDescriptorDeploymentStatusEvent = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0xdd, 0x4e, 0xf2, 0x40,
	0x10, 0xa5, 0xf0, 0x51, 0x3e, 0xa6, 0x4a, 0x70, 0x83, 0x49, 0x43, 0x02, 0x21, 0x44, 0x8d, 0x37,
	0x42, 0x52, 0x9f, 0x40, 0x23, 0x2f, 0xb0, 0x86, 0xeb, 0xa6, 0xd0, 0xb5, 0x36, 0x01, 0xb6, 0xd9,
	0x6e, 0x4d, 0x78, 0x13, 0xdf, 0xc6, 0x5b, 0x2e, 0x7d, 0x04, 0x7f, 0x6e, 0x7d, 0x08, 0x77, 0x67,
	0x5b, 0xda, 0x80, 0x17, 0x0d, 0x33, 0xe7, 0x9c, 0xd9, 0x39, 0x99, 0x03, 0x0c, 0x42, 0x96, 0xac,
	0xf8, 0x76, 0xcd, 0x36, 0xd2, 0x4f, 0x65, 0x20, 0xb3, 0xd4, 0x67, 0x2f, 0xaa, 0x99, 0x24, 0x82,
	0x4b, 0x4e, 0xec, 0x28, 0x96, 0xcf, 0xd9, 0xa2, 0x7f, 0x63, 0x7e, 0x27, 0x4b, 0xbe, 0x9e, 0x46,
	0x3c, 0xe2, 0x53, 0xa4, 0x17, 0xd9, 0x13, 0x76, 0xd8, 0x60, 0x65, 0xc6, 0xfa, 0x90, 0xa5, 0x4c,
	0xe4, 0x75, 0x57, 0xb0, 0x84, 0xa7, 0xb1, 0xe4, 0x62, 0x5b, 0x20, 0xe5, 0x4e, 0x83, 0x8c, 0xdf,
	0xea, 0xd0, 0x7d, 0xd8, 0x83, 0x8f, 0xe8, 0x83, 0x74, 0xa1, 0x91, 0x89, 0x95, 0x6b, 0x8d, 0xac,
	0xeb, 0x36, 0xd5, 0x25, 0xe9, 0x40, 0x3d, 0x0e, 0xdd, 0xba, 0x02, 0x9a, 0x54, 0x55, 0xa4, 0x07,
	0x4d, 0xed, 0x99, 0xb9, 0x0d, 0xd4, 0x98, 0x86, 0x5c, 0x41, 0x6b, 0x29, 0x58, 0xa0, 0x16, 0xba,
	0xff, 0x14, 0xee, 0x78, 0x27, 0x93, 0xdc, 0xfd, 0x5c, 0xb9, 0xa2, 0x05, 0x49, 0x46, 0xe0, 0x84,
	0x2c, 0x5d, 0x8a, 0x38, 0x91, 0x31, 0xdf, 0xb8, 0x4d, 0x7c, 0xa3, 0x0a, 0x91, 0x01, 0x80, 0x0c,
	0x44, 0xc4, 0xa4, 0xaf, 0x8d, 0xd8, 0x28, 0x68, 0x1b, 0x64, 0xae, 0xec, 0x28, 0x1a, 0xdf, 0x62,
	0xa1, 0x1f, 0x48, 0xb7, 0x65, 0xe8, 0x1c, 0xb9, 0x93, 0x9a, 0xce, 0x92, 0xb0, 0xa0, 0xff, 0x1b,
	0x3a, 0x47, 0x14, 0x7d, 0x09, 0x9d, 0xca, 0xed, 0xf5, 0x82, 0x36, 0x4a, 0x4e, 0x4b, 0x54, 0x2f,
	0x51, 0xb2, 0xf2, 0x80, 0x28, 0x03, 0x23, 0x2b, 0x51, 0x25, 0x1b, 0xff, 0x58, 0x70, 0x7e, 0x78,
	0xc1, 0x99, 0x0e, 0x92, 0xcc, 0xe0, 0xec, 0x28, 0x63, 0x3c, 0xaa, 0xe3, 0xb9, 0xc5, 0x61, 0x0e,
	0x27, 0x69, 0x25, 0xa2, 0x3c, 0x0d, 0x0f, 0xa0, 0xc4, 0x30, 0x03, 0xc7, 0x23, 0xc7, 0xf3, 0xb4,
	0xa2, 0xd2, 0x33, 0xa5, 0x4b, 0x0c, 0xa9, 0x32, 0x43, 0xf7, 0x0c, 0xad, 0xa8, 0xc8, 0x05, 0xd8,
	0x29, 0xdb, 0x84, 0xec, 0xef, 0xf0, 0x72, 0xee, 0xbe, 0xb7, 0xfb, 0x1c, 0xd6, 0x76, 0x5f, 0x43,
	0xeb, 0x5d, 0x7d, 0x1f, 0xea, 0x7b, 0xfd, 0x1e, 0xd6, 0x16, 0x36, 0xfe, 0x9b, 0x6e, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x06, 0xe6, 0x45, 0xb7, 0xd5, 0x02, 0x00, 0x00,
}
